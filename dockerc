#!/bin/sh

# DockerC (v1.1.0)
# Wrapper for docker compose commands in your project.
# https://github.com/matiboux/dockerc
# MIT License
# Copyright (c) 2023 Matiboux

# Print help
if [ "$1" = "--help" ]; then
	echo "Usage: $0 [context] [...args]"
	echo "  context syntax: [first] | [first]-[second]"
	exit 0
fi

if [ $# -gt 0 ]; then
	# Get context from first parameter and shift
	CONTEXT="$1"
	shift
else
	CONTEXT=""
fi

# Split context into first and second parts
IFS="-" read -r first second <<EOF
$CONTEXT
EOF

# If first part is empty and second part is not empty,
# Set first part to second part and second part to empty
if [ -z "$first" ] && [ ! -z "$second" ]; then
	first="-$second"
fi

# If arguments are empty, set to the default arguments
if [ -z "$@" ]; then
	ARGS="up -d"
else
	ARGS=$@
fi

# Check in current directory, then in docker directory
while read -r dir; do

	if [ ! -z "$first" ]; then

		# Set compose file arguments
		if [ -f "$dir/docker-compose-$first.yml" ]; then

			if [ -z "$second" ]; then
				COMPOSE_FILE_ARGS=" -f $dir/docker-compose-$first.yml"

			elif [ -f "$dir/docker-compose-$first.$second.yml" ]; then
				COMPOSE_FILE_ARGS=" -f $dir/docker-compose-$first.yml -f $dir/docker-compose-$first.$second.yml"
			fi

		elif [ -f "$dir/docker-compose.yml" ]; then

			if [ -f "$dir/docker-compose.$first.yml" ]; then
				COMPOSE_FILE_ARGS=" -f $dir/docker-compose.yml -f $dir/docker-compose.$first.yml"

			elif [ "$first" = "prod" ]; then
				COMPOSE_FILE_ARGS=" -f $dir/docker-compose.yml"
			fi
		fi

	fi

	if [ -z "$COMPOSE_FILE_ARGS" ] && [ "$dir" != "." ] && [ -f "$dir/docker-compose.yml" ] && \
	   ([ -z "$first" ] || [ "$first" = "dev" ]);
	then

		if [ -f "$dir/docker-compose.override.yml" ]; then
			COMPOSE_FILE_ARGS=" -f $dir/docker-compose.yml -f $dir/docker-compose.override.yml"

		else
			COMPOSE_FILE_ARGS=" -f $dir/docker-compose.yml"
		fi

	fi

done <<EOF
.
./docker
EOF

# If compose file arguments are empty, unless the context is dev, exit with error
if [ -z "$COMPOSE_FILE_ARGS" ]; then
	if [ -z "$second" ]; then
		echo "Error: Unknown context '$first'"
	else
		echo "Error: Unknown context '$first-$second'"
	fi
	exit 1
fi

# Run docker compose
echo ""
echo "> docker compose$COMPOSE_FILE_ARGS $ARGS"
echo ""
exec docker compose$COMPOSE_FILE_ARGS $ARGS
